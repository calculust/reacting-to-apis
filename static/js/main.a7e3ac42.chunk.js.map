{"version":3,"sources":["images/Studio_Ghibli_logo.svg","components/Nav.jsx","views/Home.jsx","hooks/ImportScript.js","views/Films.jsx","views/People.jsx","style/GlobalStyle.js","App.jsx","index.js"],"names":["Logo","styled","button","logo","NavLink","Nav","props","filmsActive","peopleActive","active","className","onClick","setKey","Home","href","ImportScript","resourceUrl","useEffect","script","document","createElement","src","async","body","appendChild","removeChild","Films","url","error","response","isLoading","makeRequest","axios","message","params","reload","data-masonry","data","map","val","rt_score","api_link","id","Card","Body","Title","title","ListGroup","variant","Item","producer","director","release_date","Text","description","target","rel","refresh","People","name","gender","age","eye_color","hair_color","GlobalStyle","createGlobalStyle","App","useState","key","Container","ReactDOM","render","getElementById"],"mappings":"kMAAe,MAA0B,+C,OCoCnCA,EAAOC,IAAOC,OAAV,+NAIkBC,GAKtBC,EAAUH,IAAOC,OAAV,8KASEG,EAnDH,SAACC,GACT,IAAIC,EAAaC,EAAe,GAEhC,OAAQF,EAAMG,QACV,IAAK,QACDF,EAAc,oBACd,MACJ,IAAK,SACDC,EAAe,oBAMvB,OACI,sBAAKE,UAAU,OAAf,UACI,qBAAKA,UAAU,kCAAf,SACI,cAACV,EAAD,CAAMU,UAAU,2CAA2CC,QAAS,kBAAML,EAAMM,OAAO,aAE3F,qBAAKF,UAAU,MAAf,SACI,qBAAIA,UAAU,6BAAd,UACI,oBAAIA,UAAU,WAAd,SACI,cAACN,EAAD,CAASM,UAAWH,EAAaI,QAAS,kBAAML,EAAMM,OAAO,UAA7D,qBAEJ,oBAAIF,UAAU,WAAd,SACI,cAACN,EAAD,CAASM,UAAWF,EAAcG,QAAS,kBAAML,EAAMM,OAAO,WAA9D,+BChBTC,EAZF,WACT,OACI,qBAAKH,UAAU,6BAAf,SACI,sBAAKA,UAAU,iEAAf,UACI,oBAAIA,UAAU,mBAAd,mCACA,mBAAGA,UAAU,eAAb,yTACA,mBAAGA,UAAU,8BAAb,SAA2C,6EAA+C,uBAA/C,MAAwD,mBAAGI,KAAK,yBAAR,6BAAxD,8B,wBCQ5CC,EAZM,SAAAC,GACjBC,qBAAU,WACN,IAAMC,EAASC,SAASC,cAAc,UAItC,OAHAF,EAAOG,IAAML,EACbE,EAAOI,OAAQ,EACfH,SAASI,KAAKC,YAAYN,GACnB,WACHC,SAASI,KAAKE,YAAYP,MAE/B,CAACF,KC2DOU,EAlED,WAIV,OAFAX,EAAa,8EAGT,gCACI,uCACA,cAAC,MAAD,CAAKY,IAAI,wCAAT,SACK,SAACC,EAAOC,EAAUC,EAAWC,EAAaC,GAC3C,GAAGJ,EACC,OAAQ,2DAA8BA,EAAMK,QAApC,IAA6C,wBAAQtB,QAAS,kBAAMoB,EAAY,CAAEG,OAAQ,CAAEC,QAAQ,MAAvD,sBAEpD,GAAGL,EACJ,OAAQ,6CAEP,GAAgB,OAAbD,EAAmB,CAEvB,OACI,sBAAKnB,UAAU,UAAU0B,eAFb,6BAEZ,UACKP,EAASQ,KAAKC,KAAK,SAAAC,GAChB,IAAIC,EACAC,EAAQ,gDAA4CF,EAAIG,IAI5D,OAHuBF,EAAnBD,EAAIC,SAAW,GAAe,sBAAM9B,UAAU,eAAhB,SAAgC6B,EAAIC,WACtD,sBAAM9B,UAAU,cAAhB,SAA+B6B,EAAIC,WAG/C,qBAAkB9B,UAAU,WAA5B,SACI,cAACiC,EAAA,EAAD,CAAMjC,UAAU,sBAAhB,SACI,eAACiC,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,UAAaN,EAAIO,QACjB,eAACC,EAAA,EAAD,CAAWC,QAAQ,QAAQtC,UAAU,OAArC,UACI,eAACqC,EAAA,EAAUE,KAAX,CAAgBvC,UAAU,OAA1B,UACI,uBAAOA,UAAU,aAAjB,yBADJ,IACuD6B,EAAIW,YAE3D,eAACH,EAAA,EAAUE,KAAX,CAAgBvC,UAAU,OAA1B,UACI,uBAAOA,UAAU,aAAjB,yBADJ,IACuD6B,EAAIY,YAE3D,eAACJ,EAAA,EAAUE,KAAX,CAAgBvC,UAAU,OAA1B,UACI,uBAAOA,UAAU,aAAjB,yBADJ,IACuD6B,EAAIa,gBAE3D,eAACL,EAAA,EAAUE,KAAX,CAAgBvC,UAAU,OAA1B,UACI,uBAAOA,UAAU,aAAjB,iCADJ,IAC+D8B,QAGnE,cAACG,EAAA,EAAKU,KAAN,UACKd,EAAIe,cAET,cAACX,EAAA,EAAKU,KAAN,UACI,gCAAO,mBAAGvC,KAAM2B,EAAUc,OAAO,SAASC,IAAI,aAAvC,yCAtBbjB,EAAIG,OA6BtB,wBAAQhC,UAAU,kBAAkBC,QAAS,kBAAMoB,EAAY,CAAEG,OAAQ,CAAEuB,SAAS,MAApF,wBAIZ,OAAQ,oECITC,EA/DA,WAIX,OAFA3C,EAAa,8EAGT,gCACI,wCACA,cAAC,MAAD,CAAKY,IAAI,yCAAT,SACK,SAACC,EAAOC,EAAUC,EAAWC,EAAaC,GAC3C,GAAGJ,EACC,OAAQ,2DAA8BA,EAAMK,QAApC,IAA6C,wBAAQtB,QAAS,kBAAMoB,EAAY,CAAEG,OAAQ,CAAEC,QAAQ,MAAvD,sBAEpD,GAAGL,EACJ,OAAQ,6CAEP,GAAgB,OAAbD,EAAmB,CAEvB,OACI,sBAAKnB,UAAU,UAAU0B,eAFb,6BAEZ,UACKP,EAASQ,KAAKC,KAAK,SAAAC,GAChB,IAAIE,EAAQ,iDAA6CF,EAAIG,IAE7D,OACI,qBAAkBhC,UAAU,WAA5B,SACI,cAACiC,EAAA,EAAD,CAAMjC,UAAU,sBAAhB,SACI,eAACiC,EAAA,EAAKC,KAAN,WACI,cAACD,EAAA,EAAKE,MAAN,UAAaN,EAAIoB,OACjB,eAACZ,EAAA,EAAD,CAAWC,QAAQ,QAAQtC,UAAU,OAArC,UACI,eAACqC,EAAA,EAAUE,KAAX,CAAgBvC,UAAU,OAA1B,UACI,uBAAOA,UAAU,aAAjB,oBADJ,IACkD6B,EAAIqB,UAEtD,eAACb,EAAA,EAAUE,KAAX,CAAgBvC,UAAU,OAA1B,UACI,uBAAOA,UAAU,aAAjB,iBADJ,IAC+C6B,EAAIsB,OAEnD,eAACd,EAAA,EAAUE,KAAX,CAAgBvC,UAAU,OAA1B,UACI,uBAAOA,UAAU,aAAjB,uBADJ,IACqD6B,EAAIuB,aAEzD,eAACf,EAAA,EAAUE,KAAX,CAAgBvC,UAAU,OAA1B,UACI,uBAAOA,UAAU,aAAjB,wBADJ,IACsD6B,EAAIwB,iBAG9D,cAACpB,EAAA,EAAKU,KAAN,UACKd,EAAIe,cAET,cAACX,EAAA,EAAKU,KAAN,UACI,gCAAO,mBAAGvC,KAAM2B,EAAUc,OAAO,SAASC,IAAI,aAAvC,yCAtBbjB,EAAIG,OA6BtB,wBAAQhC,UAAU,kBAAkBC,QAAS,kBAAMoB,EAAY,CAAEG,OAAQ,CAAEuB,SAAS,MAApF,wBAIZ,OAAQ,qECtDTO,EAJKC,YAAH,mCCuDFC,EAhDH,WACR,MAAsBC,mBAAS,QAA/B,mBAAOC,EAAP,KAAYxD,EAAZ,KAEA,OAAQwD,GACJ,IAAK,OACD,OACI,qCACI,cAAC,EAAD,IACA,eAACC,EAAA,EAAD,WACI,cAAC,EAAD,CAAKzD,OAAQA,EAAQH,OAAO,SAC5B,cAAC,EAAD,UAIhB,IAAK,QACD,OACI,qCACI,cAAC,EAAD,IACA,eAAC4D,EAAA,EAAD,WACI,cAAC,EAAD,CAAKzD,OAAQA,EAAQH,OAAO,UAC5B,cAAC,EAAD,UAIhB,IAAK,SACD,OACI,qCACI,cAAC,EAAD,IACA,eAAC4D,EAAA,EAAD,WACI,cAAC,EAAD,CAAKzD,OAAQA,EAAQH,OAAO,WAC5B,cAAC,EAAD,UAIhB,QACI,OACI,qCACI,cAAC,EAAD,IACA,eAAC4D,EAAA,EAAD,WACI,cAAC,EAAD,CAAKzD,OAAQA,EAAQH,OAAO,SAC5B,cAAC,EAAD,Y,MC3CxB6D,IAASC,OAAO,cAAC,EAAD,IAASpD,SAASqD,eAAe,W","file":"static/js/main.a7e3ac42.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/Studio_Ghibli_logo.09c1a923.svg\";","import styled from 'styled-components';\nimport logo from '../images/Studio_Ghibli_logo.svg'\n\nconst Nav = (props) => {\n    let filmsActive, peopleActive = '';\n\n    switch (props.active) {\n        case 'films':\n            filmsActive = 'nav-link disabled';\n            break;\n        case 'people':\n            peopleActive = 'nav-link disabled';\n            break;\n        default:\n            break;\n    }\n    \n    return (\n        <nav className=\"mb-5\">\n            <div className=\"row justify-content-center mb-3\">\n                <Logo className=\"rounded-3 border border-secondary shadow\" onClick={() => props.setKey('home')} />\n            </div>\n            <div className=\"row\">\n                <ul className=\"nav justify-content-center\">\n                    <li className=\"nav-item\">\n                        <NavLink className={filmsActive} onClick={() => props.setKey('films')}>Films</NavLink>\n                    </li>\n                    <li className=\"nav-item\">\n                        <NavLink className={peopleActive} onClick={() => props.setKey('people')}>People</NavLink>\n                    </li>\n                </ul>                \n            </div>\n        </nav>\n    )\n}\n\nconst Logo = styled.button`\n    width: 320px;\n    height: 164px;\n    background-color:white;\n    background-image: url(${logo});\n    background-position: center center;\n    background-repeat: no-repeat;\n    padding:10px;\n`\nconst NavLink = styled.button`\n    background-color:inherit;\n    border: none;\n    display: block;\n    padding: .5rem 1rem;\n    color: #0d6efd;\n    text-decoration: none;\n`\n\nexport default Nav\n","const Home = () => {\n    return (\n        <div className=\"row justify-content-center\">\n            <div className=\"col-md-5 shadow bg-white border border-secondary rounded-3 p-3\">\n                <h2 className=\"text-center mb-3\">Studio Ghibli API Lab</h2>\n                <p className=\"text-justify\">This lab shows off my awesome React skillz. It utilizes conditional rendering, fetching data from a REST API utilizing an useEffect hook, managing multiple array maps utilizing an useState hook, and Bootstrape for that iconic style. Click a button to view the resources from Studio Ghibli and enjoy!</p>\n                <p className=\"text-center text-muted mb-0\"><small>If you like what you see, then hit me up<br />at <a href=\"mailto:agarwala@me.com\">agarwala@me.com</a> and let's talk!</small></p>\n            </div>\n        </div>\n    )\n}\n\nexport default Home","import { useEffect } from 'react';\n\nconst ImportScript = resourceUrl => {\n    useEffect(() => {\n        const script = document.createElement('script');\n        script.src = resourceUrl;\n        script.async = true;\n        document.body.appendChild(script);\n        return () => {\n            document.body.removeChild(script);\n        }\n    }, [resourceUrl]);\n};\n\nexport default ImportScript;","import { Get } from 'react-axios';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport ImportScript from '../hooks/ImportScript';\n\nconst Films = () => {\n\n    ImportScript(\"https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js\");\n\n    return (\n        <div>\n            <h1>Films</h1>\n            <Get url=\"https://ghibliapi.herokuapp.com/films\">\n                {(error, response, isLoading, makeRequest, axios) => {\n                if(error) {\n                    return (<div>Something bad happened: {error.message} <button onClick={() => makeRequest({ params: { reload: true } })}>Retry</button></div>)\n                }\n                else if(isLoading) {\n                    return (<div>Loading...</div>)\n                }\n                else if(response !== null) {\n                    let data_masonry = `{'percentPosition': true }`;\n                    return (\n                        <div className=\"row g-3\" data-masonry={data_masonry}>\n                            {response.data.map( val => {\n                                let rt_score;\n                                let api_link = `https://ghibliapi.herokuapp.com/films/${val.id}`;\n                                if (val.rt_score > 79) rt_score = <span className=\"text-success\">{val.rt_score}</span>;\n                                else rt_score = <span className=\"text-danger\">{val.rt_score}</span>;\n\n                                return (\n                                    <div key={val.id} className=\"col-md-6\">\n                                        <Card className=\"shadow-sm rounded-3\">\n                                            <Card.Body>\n                                                <Card.Title>{val.title}</Card.Title>\n                                                <ListGroup variant=\"flush\" className=\"mb-3\">\n                                                    <ListGroup.Item className=\"px-0\">\n                                                        <small className=\"text-muted\">Produced by</small> {val.producer}\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item className=\"px-0\">\n                                                        <small className=\"text-muted\">Directed by</small> {val.director}\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item className=\"px-0\">\n                                                        <small className=\"text-muted\">Released in</small> {val.release_date}\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item className=\"px-0\">\n                                                        <small className=\"text-muted\">Rotten Tomato Score</small> {rt_score}\n                                                    </ListGroup.Item>\n                                                </ListGroup>\n                                                <Card.Text>\n                                                    {val.description}\n                                                </Card.Text>\n                                                <Card.Text>\n                                                    <small><a href={api_link} target=\"_blank\" rel=\"noreferrer\">API Resource Link</a></small>\n                                                </Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    </div>\n                                )\n                            })}\n                            <button className=\"btn btn-primary\" onClick={() => makeRequest({ params: { refresh: true } })}>Refresh</button>\n                        </div>\n                        )\n                }\n                return (<div>Welcome to our Films Page!</div>)\n                }}\n            </Get>\n        </div>\n    )\n}\n\nexport default Films\n","import { Get } from 'react-axios';\nimport { Card, ListGroup } from 'react-bootstrap';\nimport ImportScript from '../hooks/ImportScript';\n\nconst People = () => {\n\n    ImportScript(\"https://cdn.jsdelivr.net/npm/masonry-layout@4.2.2/dist/masonry.pkgd.min.js\");\n\n    return (\n        <div>\n            <h1>People</h1>\n            <Get url=\"https://ghibliapi.herokuapp.com/people\">\n                {(error, response, isLoading, makeRequest, axios) => {\n                if(error) {\n                    return (<div>Something bad happened: {error.message} <button onClick={() => makeRequest({ params: { reload: true } })}>Retry</button></div>)\n                }\n                else if(isLoading) {\n                    return (<div>Loading...</div>)\n                }\n                else if(response !== null) {\n                    let data_masonry = `{\"percentPosition\": true }`;\n                    return (\n                        <div className=\"row g-3\" data-masonry={data_masonry}>\n                            {response.data.map( val => {\n                                let api_link = `https://ghibliapi.herokuapp.com/people/${val.id}`;\n\n                                return (\n                                    <div key={val.id} className=\"col-md-4\">\n                                        <Card className=\"shadow-sm rounded-3\">\n                                            <Card.Body>\n                                                <Card.Title>{val.name}</Card.Title>\n                                                <ListGroup variant=\"flush\" className=\"mb-3\">\n                                                    <ListGroup.Item className=\"px-0\">\n                                                        <small className=\"text-muted\">Gender</small> {val.gender}\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item className=\"px-0\">\n                                                        <small className=\"text-muted\">Age</small> {val.age}\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item className=\"px-0\">\n                                                        <small className=\"text-muted\">Eye Color</small> {val.eye_color}\n                                                    </ListGroup.Item>\n                                                    <ListGroup.Item className=\"px-0\">\n                                                        <small className=\"text-muted\">Hair Color</small> {val.hair_color}\n                                                    </ListGroup.Item>\n                                                </ListGroup>\n                                                <Card.Text>\n                                                    {val.description}\n                                                </Card.Text>\n                                                <Card.Text>\n                                                    <small><a href={api_link} target=\"_blank\" rel=\"noreferrer\">API Resource Link</a></small>\n                                                </Card.Text>\n                                            </Card.Body>\n                                        </Card>\n                                    </div>\n                                )\n                            })}\n                            <button className=\"btn btn-primary\" onClick={() => makeRequest({ params: { refresh: true } })}>Refresh</button>\n                        </div>\n                        )\n                }\n                return (<div>Welcome to our People Page!</div>)\n                }}\n            </Get>\n        </div>\n    )\n}\n\nexport default People\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n    }\n`;\n\nexport default GlobalStyle;","import { useState } from 'react';\nimport { Container } from 'react-bootstrap';\n\nimport Nav from './components/Nav';\nimport Home from './views/Home';\nimport Films from './views/Films';\nimport People from './views/People';\nimport GlobalStyle from './style/GlobalStyle';\n\nconst App = () => {\n    const [key, setKey] = useState('home');\n\n    switch (key) {\n        case 'home':\n            return (\n                <>\n                    <GlobalStyle />\n                    <Container>\n                        <Nav setKey={setKey} active=\"home\" />\n                        <Home />\n                    </Container>\n                </>\n            );\n        case 'films':\n            return (\n                <>\n                    <GlobalStyle />\n                    <Container>\n                        <Nav setKey={setKey} active=\"films\" />\n                        <Films />\n                    </Container>\n                </>\n            );\n        case 'people':\n            return (\n                <>\n                    <GlobalStyle />\n                    <Container>\n                        <Nav setKey={setKey} active=\"people\" />\n                        <People />\n                    </Container>\n                </>\n            );\n        default:\n            return (\n                <>\n                    <GlobalStyle />\n                    <Container>\n                        <Nav setKey={setKey} active=\"home\" />\n                        <Home />\n                    </Container>\n                </>\n            );  \n    }\n    \n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}